// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AuthorsColumns holds the columns for the "authors" table.
	AuthorsColumns = []*schema.Column{
		{Name: "author_id", Type: field.TypeInt32, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "biography", Type: field.TypeString, Nullable: true},
	}
	// AuthorsTable holds the schema information for the "authors" table.
	AuthorsTable = &schema.Table{
		Name:       "authors",
		Columns:    AuthorsColumns,
		PrimaryKey: []*schema.Column{AuthorsColumns[0]},
	}
	// BooksColumns holds the columns for the "books" table.
	BooksColumns = []*schema.Column{
		{Name: "book_id", Type: field.TypeInt, Increment: true},
		{Name: "isbn", Type: field.TypeString, Unique: true},
		{Name: "title", Type: field.TypeString},
		{Name: "author", Type: field.TypeString},
		{Name: "translator", Type: field.TypeString, Nullable: true},
		{Name: "publisher_id", Type: field.TypeInt, Nullable: true},
		{Name: "publisher", Type: field.TypeString, Nullable: true},
		{Name: "publication_year", Type: field.TypeInt16, Nullable: true},
		{Name: "publication_date", Type: field.TypeTime},
		{Name: "edition", Type: field.TypeInt8, Nullable: true},
		{Name: "category", Type: field.TypeString, Nullable: true},
		{Name: "price", Type: field.TypeFloat64, Nullable: true},
		{Name: "stock_quantity", Type: field.TypeInt32, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "added_on", Type: field.TypeTime, Nullable: true},
		{Name: "cover_image", Type: field.TypeString, Nullable: true},
		{Name: "page_count", Type: field.TypeInt32},
		{Name: "language_id", Type: field.TypeInt},
		{Name: "language", Type: field.TypeString},
		{Name: "author_id", Type: field.TypeInt},
		{Name: "category_id", Type: field.TypeInt},
	}
	// BooksTable holds the schema information for the "books" table.
	BooksTable = &schema.Table{
		Name:       "books",
		Columns:    BooksColumns,
		PrimaryKey: []*schema.Column{BooksColumns[0]},
	}
	// BookAuthorsColumns holds the columns for the "book_authors" table.
	BookAuthorsColumns = []*schema.Column{
		{Name: "book_author_id", Type: field.TypeInt, Increment: true},
		{Name: "author_id", Type: field.TypeInt},
		{Name: "isbn", Type: field.TypeString},
		{Name: "book_id", Type: field.TypeInt, Nullable: true},
		{Name: "author", Type: field.TypeString, Nullable: true},
		{Name: "author_about", Type: field.TypeString, Nullable: true},
	}
	// BookAuthorsTable holds the schema information for the "book_authors" table.
	BookAuthorsTable = &schema.Table{
		Name:       "book_authors",
		Columns:    BookAuthorsColumns,
		PrimaryKey: []*schema.Column{BookAuthorsColumns[0]},
	}
	// BookDetailsColumns holds the columns for the "book_details" table.
	BookDetailsColumns = []*schema.Column{
		{Name: "detail_id", Type: field.TypeInt, Increment: true},
		{Name: "isbn", Type: field.TypeString},
		{Name: "detail_html", Type: field.TypeString, Nullable: true},
		{Name: "detail_img", Type: field.TypeString, Nullable: true},
		{Name: "book_id", Type: field.TypeInt, Nullable: true},
	}
	// BookDetailsTable holds the schema information for the "book_details" table.
	BookDetailsTable = &schema.Table{
		Name:       "book_details",
		Columns:    BookDetailsColumns,
		PrimaryKey: []*schema.Column{BookDetailsColumns[0]},
	}
	// BookImagesColumns holds the columns for the "book_images" table.
	BookImagesColumns = []*schema.Column{
		{Name: "img_id", Type: field.TypeInt, Increment: true},
		{Name: "img_url", Type: field.TypeString, Nullable: true},
		{Name: "isbn", Type: field.TypeInt},
		{Name: "img_encode", Type: field.TypeString, Nullable: true},
		{Name: "book_id", Type: field.TypeInt, Nullable: true},
		{Name: "main_flag", Type: field.TypeInt32, Nullable: true},
	}
	// BookImagesTable holds the schema information for the "book_images" table.
	BookImagesTable = &schema.Table{
		Name:       "book_images",
		Columns:    BookImagesColumns,
		PrimaryKey: []*schema.Column{BookImagesColumns[0]},
	}
	// BookStocksColumns holds the columns for the "book_stocks" table.
	BookStocksColumns = []*schema.Column{
		{Name: "stock_id", Type: field.TypeInt, Increment: true},
		{Name: "isbn", Type: field.TypeString},
		{Name: "quantity", Type: field.TypeInt, Nullable: true},
		{Name: "book_id", Type: field.TypeInt, Nullable: true},
	}
	// BookStocksTable holds the schema information for the "book_stocks" table.
	BookStocksTable = &schema.Table{
		Name:       "book_stocks",
		Columns:    BookStocksColumns,
		PrimaryKey: []*schema.Column{BookStocksColumns[0]},
	}
	// BookXcatalogsColumns holds the columns for the "book_xcatalogs" table.
	BookXcatalogsColumns = []*schema.Column{
		{Name: "book_catalog_id", Type: field.TypeInt, Increment: true},
		{Name: "catalog_id", Type: field.TypeInt},
		{Name: "isbn", Type: field.TypeString},
		{Name: "catalog_name", Type: field.TypeString, Nullable: true},
		{Name: "book_id", Type: field.TypeInt, Nullable: true},
	}
	// BookXcatalogsTable holds the schema information for the "book_xcatalogs" table.
	BookXcatalogsTable = &schema.Table{
		Name:       "book_xcatalogs",
		Columns:    BookXcatalogsColumns,
		PrimaryKey: []*schema.Column{BookXcatalogsColumns[0]},
	}
	// BookXclassicsColumns holds the columns for the "book_xclassics" table.
	BookXclassicsColumns = []*schema.Column{
		{Name: "book_classic_id", Type: field.TypeInt, Increment: true},
		{Name: "classic_id", Type: field.TypeInt},
		{Name: "isbn", Type: field.TypeString},
		{Name: "classic_name", Type: field.TypeString, Nullable: true},
		{Name: "book_id", Type: field.TypeInt, Nullable: true},
	}
	// BookXclassicsTable holds the schema information for the "book_xclassics" table.
	BookXclassicsTable = &schema.Table{
		Name:       "book_xclassics",
		Columns:    BookXclassicsColumns,
		PrimaryKey: []*schema.Column{BookXclassicsColumns[0]},
	}
	// BookXlanguagesColumns holds the columns for the "book_xlanguages" table.
	BookXlanguagesColumns = []*schema.Column{
		{Name: "book_language_id", Type: field.TypeInt, Increment: true},
		{Name: "language_id", Type: field.TypeInt},
		{Name: "isbn", Type: field.TypeString},
		{Name: "language_name", Type: field.TypeString, Nullable: true},
		{Name: "book_id", Type: field.TypeInt, Nullable: true},
	}
	// BookXlanguagesTable holds the schema information for the "book_xlanguages" table.
	BookXlanguagesTable = &schema.Table{
		Name:       "book_xlanguages",
		Columns:    BookXlanguagesColumns,
		PrimaryKey: []*schema.Column{BookXlanguagesColumns[0]},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "catalog_id", Type: field.TypeInt, Increment: true},
		{Name: "description", Type: field.TypeString},
		{Name: "catalog_name", Type: field.TypeString, Nullable: true},
		{Name: "parent_catalog_id", Type: field.TypeString},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// ClassicsColumns holds the columns for the "classics" table.
	ClassicsColumns = []*schema.Column{
		{Name: "classic_id", Type: field.TypeInt, Increment: true},
		{Name: "classic_name", Type: field.TypeString, Nullable: true},
	}
	// ClassicsTable holds the schema information for the "classics" table.
	ClassicsTable = &schema.Table{
		Name:       "classics",
		Columns:    ClassicsColumns,
		PrimaryKey: []*schema.Column{ClassicsColumns[0]},
	}
	// LanguagesColumns holds the columns for the "languages" table.
	LanguagesColumns = []*schema.Column{
		{Name: "language_id", Type: field.TypeInt, Increment: true},
		{Name: "language_name", Type: field.TypeString, Nullable: true},
		{Name: "language_code", Type: field.TypeString, Nullable: true},
	}
	// LanguagesTable holds the schema information for the "languages" table.
	LanguagesTable = &schema.Table{
		Name:       "languages",
		Columns:    LanguagesColumns,
		PrimaryKey: []*schema.Column{LanguagesColumns[0]},
	}
	// PublishersColumns holds the columns for the "publishers" table.
	PublishersColumns = []*schema.Column{
		{Name: "publisher_id", Type: field.TypeInt, Increment: true},
		{Name: "publisher_name", Type: field.TypeString},
		{Name: "publisher_address", Type: field.TypeString, Nullable: true},
		{Name: "publisher_phone", Type: field.TypeString, Nullable: true},
		{Name: "publisher_email", Type: field.TypeString, Nullable: true},
		{Name: "publisher_website", Type: field.TypeString, Nullable: true},
	}
	// PublishersTable holds the schema information for the "publishers" table.
	PublishersTable = &schema.Table{
		Name:       "publishers",
		Columns:    PublishersColumns,
		PrimaryKey: []*schema.Column{PublishersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuthorsTable,
		BooksTable,
		BookAuthorsTable,
		BookDetailsTable,
		BookImagesTable,
		BookStocksTable,
		BookXcatalogsTable,
		BookXclassicsTable,
		BookXlanguagesTable,
		CategoriesTable,
		ClassicsTable,
		LanguagesTable,
		PublishersTable,
	}
)

func init() {
}
