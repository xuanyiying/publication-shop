// Code generated by ent, DO NOT EDIT.

package publisher

import (
	"entgo.io/ent/dialect/sql"
	"github.com/xuanyiying/publication-shop/app/book/service/internal/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Publisher {
	return predicate.Publisher(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Publisher {
	return predicate.Publisher(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Publisher {
	return predicate.Publisher(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Publisher {
	return predicate.Publisher(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Publisher {
	return predicate.Publisher(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Publisher {
	return predicate.Publisher(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Publisher {
	return predicate.Publisher(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Publisher {
	return predicate.Publisher(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Publisher {
	return predicate.Publisher(sql.FieldLTE(FieldID, id))
}

// PublisherName applies equality check predicate on the "publisher_name" field. It's identical to PublisherNameEQ.
func PublisherName(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEQ(FieldPublisherName, v))
}

// PublisherAddress applies equality check predicate on the "publisher_address" field. It's identical to PublisherAddressEQ.
func PublisherAddress(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEQ(FieldPublisherAddress, v))
}

// PublisherPhone applies equality check predicate on the "publisher_phone" field. It's identical to PublisherPhoneEQ.
func PublisherPhone(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEQ(FieldPublisherPhone, v))
}

// PublisherEmail applies equality check predicate on the "publisher_email" field. It's identical to PublisherEmailEQ.
func PublisherEmail(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEQ(FieldPublisherEmail, v))
}

// PublisherWebsite applies equality check predicate on the "publisher_website" field. It's identical to PublisherWebsiteEQ.
func PublisherWebsite(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEQ(FieldPublisherWebsite, v))
}

// PublisherNameEQ applies the EQ predicate on the "publisher_name" field.
func PublisherNameEQ(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEQ(FieldPublisherName, v))
}

// PublisherNameNEQ applies the NEQ predicate on the "publisher_name" field.
func PublisherNameNEQ(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldNEQ(FieldPublisherName, v))
}

// PublisherNameIn applies the In predicate on the "publisher_name" field.
func PublisherNameIn(vs ...string) predicate.Publisher {
	return predicate.Publisher(sql.FieldIn(FieldPublisherName, vs...))
}

// PublisherNameNotIn applies the NotIn predicate on the "publisher_name" field.
func PublisherNameNotIn(vs ...string) predicate.Publisher {
	return predicate.Publisher(sql.FieldNotIn(FieldPublisherName, vs...))
}

// PublisherNameGT applies the GT predicate on the "publisher_name" field.
func PublisherNameGT(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldGT(FieldPublisherName, v))
}

// PublisherNameGTE applies the GTE predicate on the "publisher_name" field.
func PublisherNameGTE(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldGTE(FieldPublisherName, v))
}

// PublisherNameLT applies the LT predicate on the "publisher_name" field.
func PublisherNameLT(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldLT(FieldPublisherName, v))
}

// PublisherNameLTE applies the LTE predicate on the "publisher_name" field.
func PublisherNameLTE(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldLTE(FieldPublisherName, v))
}

// PublisherNameContains applies the Contains predicate on the "publisher_name" field.
func PublisherNameContains(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldContains(FieldPublisherName, v))
}

// PublisherNameHasPrefix applies the HasPrefix predicate on the "publisher_name" field.
func PublisherNameHasPrefix(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldHasPrefix(FieldPublisherName, v))
}

// PublisherNameHasSuffix applies the HasSuffix predicate on the "publisher_name" field.
func PublisherNameHasSuffix(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldHasSuffix(FieldPublisherName, v))
}

// PublisherNameEqualFold applies the EqualFold predicate on the "publisher_name" field.
func PublisherNameEqualFold(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEqualFold(FieldPublisherName, v))
}

// PublisherNameContainsFold applies the ContainsFold predicate on the "publisher_name" field.
func PublisherNameContainsFold(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldContainsFold(FieldPublisherName, v))
}

// PublisherAddressEQ applies the EQ predicate on the "publisher_address" field.
func PublisherAddressEQ(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEQ(FieldPublisherAddress, v))
}

// PublisherAddressNEQ applies the NEQ predicate on the "publisher_address" field.
func PublisherAddressNEQ(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldNEQ(FieldPublisherAddress, v))
}

// PublisherAddressIn applies the In predicate on the "publisher_address" field.
func PublisherAddressIn(vs ...string) predicate.Publisher {
	return predicate.Publisher(sql.FieldIn(FieldPublisherAddress, vs...))
}

// PublisherAddressNotIn applies the NotIn predicate on the "publisher_address" field.
func PublisherAddressNotIn(vs ...string) predicate.Publisher {
	return predicate.Publisher(sql.FieldNotIn(FieldPublisherAddress, vs...))
}

// PublisherAddressGT applies the GT predicate on the "publisher_address" field.
func PublisherAddressGT(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldGT(FieldPublisherAddress, v))
}

// PublisherAddressGTE applies the GTE predicate on the "publisher_address" field.
func PublisherAddressGTE(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldGTE(FieldPublisherAddress, v))
}

// PublisherAddressLT applies the LT predicate on the "publisher_address" field.
func PublisherAddressLT(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldLT(FieldPublisherAddress, v))
}

// PublisherAddressLTE applies the LTE predicate on the "publisher_address" field.
func PublisherAddressLTE(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldLTE(FieldPublisherAddress, v))
}

// PublisherAddressContains applies the Contains predicate on the "publisher_address" field.
func PublisherAddressContains(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldContains(FieldPublisherAddress, v))
}

// PublisherAddressHasPrefix applies the HasPrefix predicate on the "publisher_address" field.
func PublisherAddressHasPrefix(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldHasPrefix(FieldPublisherAddress, v))
}

// PublisherAddressHasSuffix applies the HasSuffix predicate on the "publisher_address" field.
func PublisherAddressHasSuffix(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldHasSuffix(FieldPublisherAddress, v))
}

// PublisherAddressIsNil applies the IsNil predicate on the "publisher_address" field.
func PublisherAddressIsNil() predicate.Publisher {
	return predicate.Publisher(sql.FieldIsNull(FieldPublisherAddress))
}

// PublisherAddressNotNil applies the NotNil predicate on the "publisher_address" field.
func PublisherAddressNotNil() predicate.Publisher {
	return predicate.Publisher(sql.FieldNotNull(FieldPublisherAddress))
}

// PublisherAddressEqualFold applies the EqualFold predicate on the "publisher_address" field.
func PublisherAddressEqualFold(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEqualFold(FieldPublisherAddress, v))
}

// PublisherAddressContainsFold applies the ContainsFold predicate on the "publisher_address" field.
func PublisherAddressContainsFold(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldContainsFold(FieldPublisherAddress, v))
}

// PublisherPhoneEQ applies the EQ predicate on the "publisher_phone" field.
func PublisherPhoneEQ(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEQ(FieldPublisherPhone, v))
}

// PublisherPhoneNEQ applies the NEQ predicate on the "publisher_phone" field.
func PublisherPhoneNEQ(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldNEQ(FieldPublisherPhone, v))
}

// PublisherPhoneIn applies the In predicate on the "publisher_phone" field.
func PublisherPhoneIn(vs ...string) predicate.Publisher {
	return predicate.Publisher(sql.FieldIn(FieldPublisherPhone, vs...))
}

// PublisherPhoneNotIn applies the NotIn predicate on the "publisher_phone" field.
func PublisherPhoneNotIn(vs ...string) predicate.Publisher {
	return predicate.Publisher(sql.FieldNotIn(FieldPublisherPhone, vs...))
}

// PublisherPhoneGT applies the GT predicate on the "publisher_phone" field.
func PublisherPhoneGT(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldGT(FieldPublisherPhone, v))
}

// PublisherPhoneGTE applies the GTE predicate on the "publisher_phone" field.
func PublisherPhoneGTE(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldGTE(FieldPublisherPhone, v))
}

// PublisherPhoneLT applies the LT predicate on the "publisher_phone" field.
func PublisherPhoneLT(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldLT(FieldPublisherPhone, v))
}

// PublisherPhoneLTE applies the LTE predicate on the "publisher_phone" field.
func PublisherPhoneLTE(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldLTE(FieldPublisherPhone, v))
}

// PublisherPhoneContains applies the Contains predicate on the "publisher_phone" field.
func PublisherPhoneContains(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldContains(FieldPublisherPhone, v))
}

// PublisherPhoneHasPrefix applies the HasPrefix predicate on the "publisher_phone" field.
func PublisherPhoneHasPrefix(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldHasPrefix(FieldPublisherPhone, v))
}

// PublisherPhoneHasSuffix applies the HasSuffix predicate on the "publisher_phone" field.
func PublisherPhoneHasSuffix(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldHasSuffix(FieldPublisherPhone, v))
}

// PublisherPhoneIsNil applies the IsNil predicate on the "publisher_phone" field.
func PublisherPhoneIsNil() predicate.Publisher {
	return predicate.Publisher(sql.FieldIsNull(FieldPublisherPhone))
}

// PublisherPhoneNotNil applies the NotNil predicate on the "publisher_phone" field.
func PublisherPhoneNotNil() predicate.Publisher {
	return predicate.Publisher(sql.FieldNotNull(FieldPublisherPhone))
}

// PublisherPhoneEqualFold applies the EqualFold predicate on the "publisher_phone" field.
func PublisherPhoneEqualFold(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEqualFold(FieldPublisherPhone, v))
}

// PublisherPhoneContainsFold applies the ContainsFold predicate on the "publisher_phone" field.
func PublisherPhoneContainsFold(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldContainsFold(FieldPublisherPhone, v))
}

// PublisherEmailEQ applies the EQ predicate on the "publisher_email" field.
func PublisherEmailEQ(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEQ(FieldPublisherEmail, v))
}

// PublisherEmailNEQ applies the NEQ predicate on the "publisher_email" field.
func PublisherEmailNEQ(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldNEQ(FieldPublisherEmail, v))
}

// PublisherEmailIn applies the In predicate on the "publisher_email" field.
func PublisherEmailIn(vs ...string) predicate.Publisher {
	return predicate.Publisher(sql.FieldIn(FieldPublisherEmail, vs...))
}

// PublisherEmailNotIn applies the NotIn predicate on the "publisher_email" field.
func PublisherEmailNotIn(vs ...string) predicate.Publisher {
	return predicate.Publisher(sql.FieldNotIn(FieldPublisherEmail, vs...))
}

// PublisherEmailGT applies the GT predicate on the "publisher_email" field.
func PublisherEmailGT(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldGT(FieldPublisherEmail, v))
}

// PublisherEmailGTE applies the GTE predicate on the "publisher_email" field.
func PublisherEmailGTE(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldGTE(FieldPublisherEmail, v))
}

// PublisherEmailLT applies the LT predicate on the "publisher_email" field.
func PublisherEmailLT(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldLT(FieldPublisherEmail, v))
}

// PublisherEmailLTE applies the LTE predicate on the "publisher_email" field.
func PublisherEmailLTE(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldLTE(FieldPublisherEmail, v))
}

// PublisherEmailContains applies the Contains predicate on the "publisher_email" field.
func PublisherEmailContains(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldContains(FieldPublisherEmail, v))
}

// PublisherEmailHasPrefix applies the HasPrefix predicate on the "publisher_email" field.
func PublisherEmailHasPrefix(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldHasPrefix(FieldPublisherEmail, v))
}

// PublisherEmailHasSuffix applies the HasSuffix predicate on the "publisher_email" field.
func PublisherEmailHasSuffix(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldHasSuffix(FieldPublisherEmail, v))
}

// PublisherEmailIsNil applies the IsNil predicate on the "publisher_email" field.
func PublisherEmailIsNil() predicate.Publisher {
	return predicate.Publisher(sql.FieldIsNull(FieldPublisherEmail))
}

// PublisherEmailNotNil applies the NotNil predicate on the "publisher_email" field.
func PublisherEmailNotNil() predicate.Publisher {
	return predicate.Publisher(sql.FieldNotNull(FieldPublisherEmail))
}

// PublisherEmailEqualFold applies the EqualFold predicate on the "publisher_email" field.
func PublisherEmailEqualFold(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEqualFold(FieldPublisherEmail, v))
}

// PublisherEmailContainsFold applies the ContainsFold predicate on the "publisher_email" field.
func PublisherEmailContainsFold(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldContainsFold(FieldPublisherEmail, v))
}

// PublisherWebsiteEQ applies the EQ predicate on the "publisher_website" field.
func PublisherWebsiteEQ(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEQ(FieldPublisherWebsite, v))
}

// PublisherWebsiteNEQ applies the NEQ predicate on the "publisher_website" field.
func PublisherWebsiteNEQ(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldNEQ(FieldPublisherWebsite, v))
}

// PublisherWebsiteIn applies the In predicate on the "publisher_website" field.
func PublisherWebsiteIn(vs ...string) predicate.Publisher {
	return predicate.Publisher(sql.FieldIn(FieldPublisherWebsite, vs...))
}

// PublisherWebsiteNotIn applies the NotIn predicate on the "publisher_website" field.
func PublisherWebsiteNotIn(vs ...string) predicate.Publisher {
	return predicate.Publisher(sql.FieldNotIn(FieldPublisherWebsite, vs...))
}

// PublisherWebsiteGT applies the GT predicate on the "publisher_website" field.
func PublisherWebsiteGT(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldGT(FieldPublisherWebsite, v))
}

// PublisherWebsiteGTE applies the GTE predicate on the "publisher_website" field.
func PublisherWebsiteGTE(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldGTE(FieldPublisherWebsite, v))
}

// PublisherWebsiteLT applies the LT predicate on the "publisher_website" field.
func PublisherWebsiteLT(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldLT(FieldPublisherWebsite, v))
}

// PublisherWebsiteLTE applies the LTE predicate on the "publisher_website" field.
func PublisherWebsiteLTE(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldLTE(FieldPublisherWebsite, v))
}

// PublisherWebsiteContains applies the Contains predicate on the "publisher_website" field.
func PublisherWebsiteContains(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldContains(FieldPublisherWebsite, v))
}

// PublisherWebsiteHasPrefix applies the HasPrefix predicate on the "publisher_website" field.
func PublisherWebsiteHasPrefix(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldHasPrefix(FieldPublisherWebsite, v))
}

// PublisherWebsiteHasSuffix applies the HasSuffix predicate on the "publisher_website" field.
func PublisherWebsiteHasSuffix(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldHasSuffix(FieldPublisherWebsite, v))
}

// PublisherWebsiteIsNil applies the IsNil predicate on the "publisher_website" field.
func PublisherWebsiteIsNil() predicate.Publisher {
	return predicate.Publisher(sql.FieldIsNull(FieldPublisherWebsite))
}

// PublisherWebsiteNotNil applies the NotNil predicate on the "publisher_website" field.
func PublisherWebsiteNotNil() predicate.Publisher {
	return predicate.Publisher(sql.FieldNotNull(FieldPublisherWebsite))
}

// PublisherWebsiteEqualFold applies the EqualFold predicate on the "publisher_website" field.
func PublisherWebsiteEqualFold(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldEqualFold(FieldPublisherWebsite, v))
}

// PublisherWebsiteContainsFold applies the ContainsFold predicate on the "publisher_website" field.
func PublisherWebsiteContainsFold(v string) predicate.Publisher {
	return predicate.Publisher(sql.FieldContainsFold(FieldPublisherWebsite, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Publisher) predicate.Publisher {
	return predicate.Publisher(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Publisher) predicate.Publisher {
	return predicate.Publisher(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Publisher) predicate.Publisher {
	return predicate.Publisher(sql.NotPredicates(p))
}
