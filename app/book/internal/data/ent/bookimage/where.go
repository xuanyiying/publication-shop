// Code generated by ent, DO NOT EDIT.

package bookimage

import (
	"entgo.io/ent/dialect/sql"
	"github.com/xuanyiying/publication-shop/app/book/internal/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.BookImage {
	return predicate.BookImage(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.BookImage {
	return predicate.BookImage(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.BookImage {
	return predicate.BookImage(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.BookImage {
	return predicate.BookImage(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.BookImage {
	return predicate.BookImage(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.BookImage {
	return predicate.BookImage(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.BookImage {
	return predicate.BookImage(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.BookImage {
	return predicate.BookImage(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.BookImage {
	return predicate.BookImage(sql.FieldLTE(FieldID, id))
}

// ImgURL applies equality check predicate on the "img_url" field. It's identical to ImgURLEQ.
func ImgURL(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldEQ(FieldImgURL, v))
}

// Isbn applies equality check predicate on the "isbn" field. It's identical to IsbnEQ.
func Isbn(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldEQ(FieldIsbn, v))
}

// ImgEncode applies equality check predicate on the "img_encode" field. It's identical to ImgEncodeEQ.
func ImgEncode(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldEQ(FieldImgEncode, v))
}

// BookID applies equality check predicate on the "book_id" field. It's identical to BookIDEQ.
func BookID(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldEQ(FieldBookID, v))
}

// MainFlag applies equality check predicate on the "mainFlag" field. It's identical to MainFlagEQ.
func MainFlag(v int32) predicate.BookImage {
	return predicate.BookImage(sql.FieldEQ(FieldMainFlag, v))
}

// ImgURLEQ applies the EQ predicate on the "img_url" field.
func ImgURLEQ(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldEQ(FieldImgURL, v))
}

// ImgURLNEQ applies the NEQ predicate on the "img_url" field.
func ImgURLNEQ(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldNEQ(FieldImgURL, v))
}

// ImgURLIn applies the In predicate on the "img_url" field.
func ImgURLIn(vs ...string) predicate.BookImage {
	return predicate.BookImage(sql.FieldIn(FieldImgURL, vs...))
}

// ImgURLNotIn applies the NotIn predicate on the "img_url" field.
func ImgURLNotIn(vs ...string) predicate.BookImage {
	return predicate.BookImage(sql.FieldNotIn(FieldImgURL, vs...))
}

// ImgURLGT applies the GT predicate on the "img_url" field.
func ImgURLGT(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldGT(FieldImgURL, v))
}

// ImgURLGTE applies the GTE predicate on the "img_url" field.
func ImgURLGTE(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldGTE(FieldImgURL, v))
}

// ImgURLLT applies the LT predicate on the "img_url" field.
func ImgURLLT(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldLT(FieldImgURL, v))
}

// ImgURLLTE applies the LTE predicate on the "img_url" field.
func ImgURLLTE(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldLTE(FieldImgURL, v))
}

// ImgURLContains applies the Contains predicate on the "img_url" field.
func ImgURLContains(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldContains(FieldImgURL, v))
}

// ImgURLHasPrefix applies the HasPrefix predicate on the "img_url" field.
func ImgURLHasPrefix(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldHasPrefix(FieldImgURL, v))
}

// ImgURLHasSuffix applies the HasSuffix predicate on the "img_url" field.
func ImgURLHasSuffix(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldHasSuffix(FieldImgURL, v))
}

// ImgURLIsNil applies the IsNil predicate on the "img_url" field.
func ImgURLIsNil() predicate.BookImage {
	return predicate.BookImage(sql.FieldIsNull(FieldImgURL))
}

// ImgURLNotNil applies the NotNil predicate on the "img_url" field.
func ImgURLNotNil() predicate.BookImage {
	return predicate.BookImage(sql.FieldNotNull(FieldImgURL))
}

// ImgURLEqualFold applies the EqualFold predicate on the "img_url" field.
func ImgURLEqualFold(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldEqualFold(FieldImgURL, v))
}

// ImgURLContainsFold applies the ContainsFold predicate on the "img_url" field.
func ImgURLContainsFold(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldContainsFold(FieldImgURL, v))
}

// IsbnEQ applies the EQ predicate on the "isbn" field.
func IsbnEQ(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldEQ(FieldIsbn, v))
}

// IsbnNEQ applies the NEQ predicate on the "isbn" field.
func IsbnNEQ(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldNEQ(FieldIsbn, v))
}

// IsbnIn applies the In predicate on the "isbn" field.
func IsbnIn(vs ...int) predicate.BookImage {
	return predicate.BookImage(sql.FieldIn(FieldIsbn, vs...))
}

// IsbnNotIn applies the NotIn predicate on the "isbn" field.
func IsbnNotIn(vs ...int) predicate.BookImage {
	return predicate.BookImage(sql.FieldNotIn(FieldIsbn, vs...))
}

// IsbnGT applies the GT predicate on the "isbn" field.
func IsbnGT(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldGT(FieldIsbn, v))
}

// IsbnGTE applies the GTE predicate on the "isbn" field.
func IsbnGTE(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldGTE(FieldIsbn, v))
}

// IsbnLT applies the LT predicate on the "isbn" field.
func IsbnLT(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldLT(FieldIsbn, v))
}

// IsbnLTE applies the LTE predicate on the "isbn" field.
func IsbnLTE(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldLTE(FieldIsbn, v))
}

// ImgEncodeEQ applies the EQ predicate on the "img_encode" field.
func ImgEncodeEQ(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldEQ(FieldImgEncode, v))
}

// ImgEncodeNEQ applies the NEQ predicate on the "img_encode" field.
func ImgEncodeNEQ(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldNEQ(FieldImgEncode, v))
}

// ImgEncodeIn applies the In predicate on the "img_encode" field.
func ImgEncodeIn(vs ...string) predicate.BookImage {
	return predicate.BookImage(sql.FieldIn(FieldImgEncode, vs...))
}

// ImgEncodeNotIn applies the NotIn predicate on the "img_encode" field.
func ImgEncodeNotIn(vs ...string) predicate.BookImage {
	return predicate.BookImage(sql.FieldNotIn(FieldImgEncode, vs...))
}

// ImgEncodeGT applies the GT predicate on the "img_encode" field.
func ImgEncodeGT(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldGT(FieldImgEncode, v))
}

// ImgEncodeGTE applies the GTE predicate on the "img_encode" field.
func ImgEncodeGTE(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldGTE(FieldImgEncode, v))
}

// ImgEncodeLT applies the LT predicate on the "img_encode" field.
func ImgEncodeLT(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldLT(FieldImgEncode, v))
}

// ImgEncodeLTE applies the LTE predicate on the "img_encode" field.
func ImgEncodeLTE(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldLTE(FieldImgEncode, v))
}

// ImgEncodeContains applies the Contains predicate on the "img_encode" field.
func ImgEncodeContains(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldContains(FieldImgEncode, v))
}

// ImgEncodeHasPrefix applies the HasPrefix predicate on the "img_encode" field.
func ImgEncodeHasPrefix(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldHasPrefix(FieldImgEncode, v))
}

// ImgEncodeHasSuffix applies the HasSuffix predicate on the "img_encode" field.
func ImgEncodeHasSuffix(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldHasSuffix(FieldImgEncode, v))
}

// ImgEncodeIsNil applies the IsNil predicate on the "img_encode" field.
func ImgEncodeIsNil() predicate.BookImage {
	return predicate.BookImage(sql.FieldIsNull(FieldImgEncode))
}

// ImgEncodeNotNil applies the NotNil predicate on the "img_encode" field.
func ImgEncodeNotNil() predicate.BookImage {
	return predicate.BookImage(sql.FieldNotNull(FieldImgEncode))
}

// ImgEncodeEqualFold applies the EqualFold predicate on the "img_encode" field.
func ImgEncodeEqualFold(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldEqualFold(FieldImgEncode, v))
}

// ImgEncodeContainsFold applies the ContainsFold predicate on the "img_encode" field.
func ImgEncodeContainsFold(v string) predicate.BookImage {
	return predicate.BookImage(sql.FieldContainsFold(FieldImgEncode, v))
}

// BookIDEQ applies the EQ predicate on the "book_id" field.
func BookIDEQ(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldEQ(FieldBookID, v))
}

// BookIDNEQ applies the NEQ predicate on the "book_id" field.
func BookIDNEQ(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldNEQ(FieldBookID, v))
}

// BookIDIn applies the In predicate on the "book_id" field.
func BookIDIn(vs ...int) predicate.BookImage {
	return predicate.BookImage(sql.FieldIn(FieldBookID, vs...))
}

// BookIDNotIn applies the NotIn predicate on the "book_id" field.
func BookIDNotIn(vs ...int) predicate.BookImage {
	return predicate.BookImage(sql.FieldNotIn(FieldBookID, vs...))
}

// BookIDGT applies the GT predicate on the "book_id" field.
func BookIDGT(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldGT(FieldBookID, v))
}

// BookIDGTE applies the GTE predicate on the "book_id" field.
func BookIDGTE(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldGTE(FieldBookID, v))
}

// BookIDLT applies the LT predicate on the "book_id" field.
func BookIDLT(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldLT(FieldBookID, v))
}

// BookIDLTE applies the LTE predicate on the "book_id" field.
func BookIDLTE(v int) predicate.BookImage {
	return predicate.BookImage(sql.FieldLTE(FieldBookID, v))
}

// BookIDIsNil applies the IsNil predicate on the "book_id" field.
func BookIDIsNil() predicate.BookImage {
	return predicate.BookImage(sql.FieldIsNull(FieldBookID))
}

// BookIDNotNil applies the NotNil predicate on the "book_id" field.
func BookIDNotNil() predicate.BookImage {
	return predicate.BookImage(sql.FieldNotNull(FieldBookID))
}

// MainFlagEQ applies the EQ predicate on the "mainFlag" field.
func MainFlagEQ(v int32) predicate.BookImage {
	return predicate.BookImage(sql.FieldEQ(FieldMainFlag, v))
}

// MainFlagNEQ applies the NEQ predicate on the "mainFlag" field.
func MainFlagNEQ(v int32) predicate.BookImage {
	return predicate.BookImage(sql.FieldNEQ(FieldMainFlag, v))
}

// MainFlagIn applies the In predicate on the "mainFlag" field.
func MainFlagIn(vs ...int32) predicate.BookImage {
	return predicate.BookImage(sql.FieldIn(FieldMainFlag, vs...))
}

// MainFlagNotIn applies the NotIn predicate on the "mainFlag" field.
func MainFlagNotIn(vs ...int32) predicate.BookImage {
	return predicate.BookImage(sql.FieldNotIn(FieldMainFlag, vs...))
}

// MainFlagGT applies the GT predicate on the "mainFlag" field.
func MainFlagGT(v int32) predicate.BookImage {
	return predicate.BookImage(sql.FieldGT(FieldMainFlag, v))
}

// MainFlagGTE applies the GTE predicate on the "mainFlag" field.
func MainFlagGTE(v int32) predicate.BookImage {
	return predicate.BookImage(sql.FieldGTE(FieldMainFlag, v))
}

// MainFlagLT applies the LT predicate on the "mainFlag" field.
func MainFlagLT(v int32) predicate.BookImage {
	return predicate.BookImage(sql.FieldLT(FieldMainFlag, v))
}

// MainFlagLTE applies the LTE predicate on the "mainFlag" field.
func MainFlagLTE(v int32) predicate.BookImage {
	return predicate.BookImage(sql.FieldLTE(FieldMainFlag, v))
}

// MainFlagIsNil applies the IsNil predicate on the "mainFlag" field.
func MainFlagIsNil() predicate.BookImage {
	return predicate.BookImage(sql.FieldIsNull(FieldMainFlag))
}

// MainFlagNotNil applies the NotNil predicate on the "mainFlag" field.
func MainFlagNotNil() predicate.BookImage {
	return predicate.BookImage(sql.FieldNotNull(FieldMainFlag))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.BookImage) predicate.BookImage {
	return predicate.BookImage(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.BookImage) predicate.BookImage {
	return predicate.BookImage(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.BookImage) predicate.BookImage {
	return predicate.BookImage(sql.NotPredicates(p))
}
