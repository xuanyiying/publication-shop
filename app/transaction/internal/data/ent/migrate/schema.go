// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "order_id", Type: field.TypeInt64, Increment: true},
		{Name: "order_no", Type: field.TypeString, Nullable: true},
		{Name: "tx_id", Type: field.TypeInt64},
		{Name: "order_status", Type: field.TypeEnum, Enums: []string{"pending", "processing", "shipped", "delivered", "cancelled"}},
		{Name: "delivered_address", Type: field.TypeString, Nullable: true},
		{Name: "shipping_cost", Type: field.TypeFloat64, Nullable: true},
		{Name: "total_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "placed_user_id", Type: field.TypeInt64},
		{Name: "placed_at", Type: field.TypeTime, Nullable: true},
		{Name: "shipped_address", Type: field.TypeString, Nullable: true},
		{Name: "shipped_at", Type: field.TypeTime, Nullable: true},
		{Name: "payment_id", Type: field.TypeInt64, Nullable: true},
		{Name: "transaction_tx_order", Type: field.TypeInt64, Nullable: true},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "orders_transactions_txOrder",
				Columns:    []*schema.Column{OrdersColumns[12]},
				RefColumns: []*schema.Column{TransactionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "tx_id", Type: field.TypeInt64, Increment: true},
		{Name: "tx_no", Type: field.TypeString},
		{Name: "tx_type", Type: field.TypeEnum, Enums: []string{"buy", "sell"}},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "tx_status", Type: field.TypeEnum, Enums: []string{"pending", "completed", "cancelled"}},
		{Name: "tx_date", Type: field.TypeTime, Nullable: true},
		{Name: "tx_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "payment_id", Type: field.TypeInt64, Nullable: true},
		{Name: "order_transaction", Type: field.TypeInt64, Nullable: true},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transactions_orders_transaction",
				Columns:    []*schema.Column{TransactionsColumns[9]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TxItemsColumns holds the columns for the "tx_items" table.
	TxItemsColumns = []*schema.Column{
		{Name: "tx_item_id", Type: field.TypeInt64, Increment: true},
		{Name: "tx_type", Type: field.TypeEnum, Enums: []string{"buy", "sell"}},
		{Name: "tx_id", Type: field.TypeInt64},
		{Name: "book_id", Type: field.TypeInt64},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "isbn", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "author", Type: field.TypeString},
		{Name: "publisher_id", Type: field.TypeInt64, Nullable: true},
		{Name: "image_url", Type: field.TypeString, Nullable: true},
		{Name: "order_tx_items", Type: field.TypeInt64, Nullable: true},
		{Name: "transaction_tx_items", Type: field.TypeInt64, Nullable: true},
	}
	// TxItemsTable holds the schema information for the "tx_items" table.
	TxItemsTable = &schema.Table{
		Name:       "tx_items",
		Columns:    TxItemsColumns,
		PrimaryKey: []*schema.Column{TxItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tx_items_orders_txItems",
				Columns:    []*schema.Column{TxItemsColumns[11]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tx_items_transactions_txItems",
				Columns:    []*schema.Column{TxItemsColumns[12]},
				RefColumns: []*schema.Column{TransactionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		OrdersTable,
		TransactionsTable,
		TxItemsTable,
	}
)

func init() {
	OrdersTable.ForeignKeys[0].RefTable = TransactionsTable
	TransactionsTable.ForeignKeys[0].RefTable = OrdersTable
	TxItemsTable.ForeignKeys[0].RefTable = OrdersTable
	TxItemsTable.ForeignKeys[1].RefTable = TransactionsTable
}
