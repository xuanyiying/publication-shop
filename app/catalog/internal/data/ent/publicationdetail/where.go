// Code generated by ent, DO NOT EDIT.

package publicationdetail

import (
	"entgo.io/ent/dialect/sql"
	"github.com/xuanyiying/publication-shop/app/catalog/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldLTE(FieldID, id))
}

// Isbn applies equality check predicate on the "isbn" field. It's identical to IsbnEQ.
func Isbn(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldEQ(FieldIsbn, v))
}

// DetailHTML applies equality check predicate on the "detail_html" field. It's identical to DetailHTMLEQ.
func DetailHTML(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldEQ(FieldDetailHTML, v))
}

// DetailImg applies equality check predicate on the "detail_img" field. It's identical to DetailImgEQ.
func DetailImg(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldEQ(FieldDetailImg, v))
}

// PublicationID applies equality check predicate on the "publication_id" field. It's identical to PublicationIDEQ.
func PublicationID(v int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldEQ(FieldPublicationID, v))
}

// IsbnEQ applies the EQ predicate on the "isbn" field.
func IsbnEQ(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldEQ(FieldIsbn, v))
}

// IsbnNEQ applies the NEQ predicate on the "isbn" field.
func IsbnNEQ(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldNEQ(FieldIsbn, v))
}

// IsbnIn applies the In predicate on the "isbn" field.
func IsbnIn(vs ...string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldIn(FieldIsbn, vs...))
}

// IsbnNotIn applies the NotIn predicate on the "isbn" field.
func IsbnNotIn(vs ...string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldNotIn(FieldIsbn, vs...))
}

// IsbnGT applies the GT predicate on the "isbn" field.
func IsbnGT(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldGT(FieldIsbn, v))
}

// IsbnGTE applies the GTE predicate on the "isbn" field.
func IsbnGTE(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldGTE(FieldIsbn, v))
}

// IsbnLT applies the LT predicate on the "isbn" field.
func IsbnLT(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldLT(FieldIsbn, v))
}

// IsbnLTE applies the LTE predicate on the "isbn" field.
func IsbnLTE(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldLTE(FieldIsbn, v))
}

// IsbnContains applies the Contains predicate on the "isbn" field.
func IsbnContains(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldContains(FieldIsbn, v))
}

// IsbnHasPrefix applies the HasPrefix predicate on the "isbn" field.
func IsbnHasPrefix(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldHasPrefix(FieldIsbn, v))
}

// IsbnHasSuffix applies the HasSuffix predicate on the "isbn" field.
func IsbnHasSuffix(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldHasSuffix(FieldIsbn, v))
}

// IsbnEqualFold applies the EqualFold predicate on the "isbn" field.
func IsbnEqualFold(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldEqualFold(FieldIsbn, v))
}

// IsbnContainsFold applies the ContainsFold predicate on the "isbn" field.
func IsbnContainsFold(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldContainsFold(FieldIsbn, v))
}

// DetailHTMLEQ applies the EQ predicate on the "detail_html" field.
func DetailHTMLEQ(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldEQ(FieldDetailHTML, v))
}

// DetailHTMLNEQ applies the NEQ predicate on the "detail_html" field.
func DetailHTMLNEQ(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldNEQ(FieldDetailHTML, v))
}

// DetailHTMLIn applies the In predicate on the "detail_html" field.
func DetailHTMLIn(vs ...string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldIn(FieldDetailHTML, vs...))
}

// DetailHTMLNotIn applies the NotIn predicate on the "detail_html" field.
func DetailHTMLNotIn(vs ...string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldNotIn(FieldDetailHTML, vs...))
}

// DetailHTMLGT applies the GT predicate on the "detail_html" field.
func DetailHTMLGT(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldGT(FieldDetailHTML, v))
}

// DetailHTMLGTE applies the GTE predicate on the "detail_html" field.
func DetailHTMLGTE(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldGTE(FieldDetailHTML, v))
}

// DetailHTMLLT applies the LT predicate on the "detail_html" field.
func DetailHTMLLT(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldLT(FieldDetailHTML, v))
}

// DetailHTMLLTE applies the LTE predicate on the "detail_html" field.
func DetailHTMLLTE(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldLTE(FieldDetailHTML, v))
}

// DetailHTMLContains applies the Contains predicate on the "detail_html" field.
func DetailHTMLContains(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldContains(FieldDetailHTML, v))
}

// DetailHTMLHasPrefix applies the HasPrefix predicate on the "detail_html" field.
func DetailHTMLHasPrefix(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldHasPrefix(FieldDetailHTML, v))
}

// DetailHTMLHasSuffix applies the HasSuffix predicate on the "detail_html" field.
func DetailHTMLHasSuffix(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldHasSuffix(FieldDetailHTML, v))
}

// DetailHTMLIsNil applies the IsNil predicate on the "detail_html" field.
func DetailHTMLIsNil() predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldIsNull(FieldDetailHTML))
}

// DetailHTMLNotNil applies the NotNil predicate on the "detail_html" field.
func DetailHTMLNotNil() predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldNotNull(FieldDetailHTML))
}

// DetailHTMLEqualFold applies the EqualFold predicate on the "detail_html" field.
func DetailHTMLEqualFold(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldEqualFold(FieldDetailHTML, v))
}

// DetailHTMLContainsFold applies the ContainsFold predicate on the "detail_html" field.
func DetailHTMLContainsFold(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldContainsFold(FieldDetailHTML, v))
}

// DetailImgEQ applies the EQ predicate on the "detail_img" field.
func DetailImgEQ(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldEQ(FieldDetailImg, v))
}

// DetailImgNEQ applies the NEQ predicate on the "detail_img" field.
func DetailImgNEQ(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldNEQ(FieldDetailImg, v))
}

// DetailImgIn applies the In predicate on the "detail_img" field.
func DetailImgIn(vs ...string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldIn(FieldDetailImg, vs...))
}

// DetailImgNotIn applies the NotIn predicate on the "detail_img" field.
func DetailImgNotIn(vs ...string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldNotIn(FieldDetailImg, vs...))
}

// DetailImgGT applies the GT predicate on the "detail_img" field.
func DetailImgGT(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldGT(FieldDetailImg, v))
}

// DetailImgGTE applies the GTE predicate on the "detail_img" field.
func DetailImgGTE(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldGTE(FieldDetailImg, v))
}

// DetailImgLT applies the LT predicate on the "detail_img" field.
func DetailImgLT(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldLT(FieldDetailImg, v))
}

// DetailImgLTE applies the LTE predicate on the "detail_img" field.
func DetailImgLTE(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldLTE(FieldDetailImg, v))
}

// DetailImgContains applies the Contains predicate on the "detail_img" field.
func DetailImgContains(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldContains(FieldDetailImg, v))
}

// DetailImgHasPrefix applies the HasPrefix predicate on the "detail_img" field.
func DetailImgHasPrefix(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldHasPrefix(FieldDetailImg, v))
}

// DetailImgHasSuffix applies the HasSuffix predicate on the "detail_img" field.
func DetailImgHasSuffix(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldHasSuffix(FieldDetailImg, v))
}

// DetailImgIsNil applies the IsNil predicate on the "detail_img" field.
func DetailImgIsNil() predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldIsNull(FieldDetailImg))
}

// DetailImgNotNil applies the NotNil predicate on the "detail_img" field.
func DetailImgNotNil() predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldNotNull(FieldDetailImg))
}

// DetailImgEqualFold applies the EqualFold predicate on the "detail_img" field.
func DetailImgEqualFold(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldEqualFold(FieldDetailImg, v))
}

// DetailImgContainsFold applies the ContainsFold predicate on the "detail_img" field.
func DetailImgContainsFold(v string) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldContainsFold(FieldDetailImg, v))
}

// PublicationIDEQ applies the EQ predicate on the "publication_id" field.
func PublicationIDEQ(v int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldEQ(FieldPublicationID, v))
}

// PublicationIDNEQ applies the NEQ predicate on the "publication_id" field.
func PublicationIDNEQ(v int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldNEQ(FieldPublicationID, v))
}

// PublicationIDIn applies the In predicate on the "publication_id" field.
func PublicationIDIn(vs ...int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldIn(FieldPublicationID, vs...))
}

// PublicationIDNotIn applies the NotIn predicate on the "publication_id" field.
func PublicationIDNotIn(vs ...int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldNotIn(FieldPublicationID, vs...))
}

// PublicationIDGT applies the GT predicate on the "publication_id" field.
func PublicationIDGT(v int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldGT(FieldPublicationID, v))
}

// PublicationIDGTE applies the GTE predicate on the "publication_id" field.
func PublicationIDGTE(v int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldGTE(FieldPublicationID, v))
}

// PublicationIDLT applies the LT predicate on the "publication_id" field.
func PublicationIDLT(v int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldLT(FieldPublicationID, v))
}

// PublicationIDLTE applies the LTE predicate on the "publication_id" field.
func PublicationIDLTE(v int) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldLTE(FieldPublicationID, v))
}

// PublicationIDIsNil applies the IsNil predicate on the "publication_id" field.
func PublicationIDIsNil() predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldIsNull(FieldPublicationID))
}

// PublicationIDNotNil applies the NotNil predicate on the "publication_id" field.
func PublicationIDNotNil() predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.FieldNotNull(FieldPublicationID))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PublicationDetail) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PublicationDetail) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PublicationDetail) predicate.PublicationDetail {
	return predicate.PublicationDetail(sql.NotPredicates(p))
}
