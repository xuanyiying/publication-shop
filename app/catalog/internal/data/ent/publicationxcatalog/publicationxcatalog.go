// Code generated by ent, DO NOT EDIT.

package publicationxcatalog

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the publicationxcatalog type in the database.
	Label = "publication_xcatalog"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "publication_catalog_id"
	// FieldCatalogID holds the string denoting the catalog_id field in the database.
	FieldCatalogID = "catalog_id"
	// FieldIsbn holds the string denoting the isbn field in the database.
	FieldIsbn = "isbn"
	// FieldCatalogName holds the string denoting the catalog_name field in the database.
	FieldCatalogName = "catalog_name"
	// FieldPublicationID holds the string denoting the publication_id field in the database.
	FieldPublicationID = "publication_id"
	// Table holds the table name of the publicationxcatalog in the database.
	Table = "publication_x_catalog"
)

// Columns holds all SQL columns for publicationxcatalog fields.
var Columns = []string{
	FieldID,
	FieldCatalogID,
	FieldIsbn,
	FieldCatalogName,
	FieldPublicationID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the PublicationXCatalog queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCatalogID orders the results by the catalog_id field.
func ByCatalogID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCatalogID, opts...).ToFunc()
}

// ByIsbn orders the results by the isbn field.
func ByIsbn(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsbn, opts...).ToFunc()
}

// ByCatalogName orders the results by the catalog_name field.
func ByCatalogName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCatalogName, opts...).ToFunc()
}

// ByPublicationID orders the results by the publication_id field.
func ByPublicationID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPublicationID, opts...).ToFunc()
}
