// Code generated by ent, DO NOT EDIT.

package publicationstock

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the publicationstock type in the database.
	Label = "publication_stock"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "stock_id"
	// FieldIsbn holds the string denoting the isbn field in the database.
	FieldIsbn = "isbn"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// FieldPublicationID holds the string denoting the publication_id field in the database.
	FieldPublicationID = "publication_id"
	// Table holds the table name of the publicationstock in the database.
	Table = "publication_stock"
)

// Columns holds all SQL columns for publicationstock fields.
var Columns = []string{
	FieldID,
	FieldIsbn,
	FieldQuantity,
	FieldPublicationID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the PublicationStock queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByIsbn orders the results by the isbn field.
func ByIsbn(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsbn, opts...).ToFunc()
}

// ByQuantity orders the results by the quantity field.
func ByQuantity(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldQuantity, opts...).ToFunc()
}

// ByPublicationID orders the results by the publication_id field.
func ByPublicationID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPublicationID, opts...).ToFunc()
}
