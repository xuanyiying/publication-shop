// Code generated by ent, DO NOT EDIT.

package publicationinfo

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/publication-shop/app/catalog/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldID, id))
}

// PublicationName applies equality check predicate on the "publication_name" field. It's identical to PublicationNameEQ.
func PublicationName(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldPublicationName, v))
}

// OrgID applies equality check predicate on the "org_id" field. It's identical to OrgIDEQ.
func OrgID(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldOrgID, v))
}

// PublishedTimes applies equality check predicate on the "published_times" field. It's identical to PublishedTimesEQ.
func PublishedTimes(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldPublishedTimes, v))
}

// PrintTimes applies equality check predicate on the "print_times" field. It's identical to PrintTimesEQ.
func PrintTimes(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldPrintTimes, v))
}

// Price applies equality check predicate on the "price" field. It's identical to PriceEQ.
func Price(v float64) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldPrice, v))
}

// Introduction applies equality check predicate on the "introduction" field. It's identical to IntroductionEQ.
func Introduction(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldIntroduction, v))
}

// WordCount applies equality check predicate on the "word_count" field. It's identical to WordCountEQ.
func WordCount(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldWordCount, v))
}

// Isbn applies equality check predicate on the "isbn" field. It's identical to IsbnEQ.
func Isbn(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldIsbn, v))
}

// StorageBy applies equality check predicate on the "storage_by" field. It's identical to StorageByEQ.
func StorageBy(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldStorageBy, v))
}

// StorageAt applies equality check predicate on the "storage_at" field. It's identical to StorageAtEQ.
func StorageAt(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldStorageAt, v))
}

// ModifiedBy applies equality check predicate on the "modified_by" field. It's identical to ModifiedByEQ.
func ModifiedBy(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldModifiedBy, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldCreatedAt, v))
}

// ModifiedAt applies equality check predicate on the "modified_at" field. It's identical to ModifiedAtEQ.
func ModifiedAt(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldModifiedAt, v))
}

// PublicationNameEQ applies the EQ predicate on the "publication_name" field.
func PublicationNameEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldPublicationName, v))
}

// PublicationNameNEQ applies the NEQ predicate on the "publication_name" field.
func PublicationNameNEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldPublicationName, v))
}

// PublicationNameIn applies the In predicate on the "publication_name" field.
func PublicationNameIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldPublicationName, vs...))
}

// PublicationNameNotIn applies the NotIn predicate on the "publication_name" field.
func PublicationNameNotIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldPublicationName, vs...))
}

// PublicationNameGT applies the GT predicate on the "publication_name" field.
func PublicationNameGT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldPublicationName, v))
}

// PublicationNameGTE applies the GTE predicate on the "publication_name" field.
func PublicationNameGTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldPublicationName, v))
}

// PublicationNameLT applies the LT predicate on the "publication_name" field.
func PublicationNameLT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldPublicationName, v))
}

// PublicationNameLTE applies the LTE predicate on the "publication_name" field.
func PublicationNameLTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldPublicationName, v))
}

// PublicationNameContains applies the Contains predicate on the "publication_name" field.
func PublicationNameContains(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContains(FieldPublicationName, v))
}

// PublicationNameHasPrefix applies the HasPrefix predicate on the "publication_name" field.
func PublicationNameHasPrefix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasPrefix(FieldPublicationName, v))
}

// PublicationNameHasSuffix applies the HasSuffix predicate on the "publication_name" field.
func PublicationNameHasSuffix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasSuffix(FieldPublicationName, v))
}

// PublicationNameIsNil applies the IsNil predicate on the "publication_name" field.
func PublicationNameIsNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIsNull(FieldPublicationName))
}

// PublicationNameNotNil applies the NotNil predicate on the "publication_name" field.
func PublicationNameNotNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotNull(FieldPublicationName))
}

// PublicationNameEqualFold applies the EqualFold predicate on the "publication_name" field.
func PublicationNameEqualFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEqualFold(FieldPublicationName, v))
}

// PublicationNameContainsFold applies the ContainsFold predicate on the "publication_name" field.
func PublicationNameContainsFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContainsFold(FieldPublicationName, v))
}

// OrgIDEQ applies the EQ predicate on the "org_id" field.
func OrgIDEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldOrgID, v))
}

// OrgIDNEQ applies the NEQ predicate on the "org_id" field.
func OrgIDNEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldOrgID, v))
}

// OrgIDIn applies the In predicate on the "org_id" field.
func OrgIDIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldOrgID, vs...))
}

// OrgIDNotIn applies the NotIn predicate on the "org_id" field.
func OrgIDNotIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldOrgID, vs...))
}

// OrgIDGT applies the GT predicate on the "org_id" field.
func OrgIDGT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldOrgID, v))
}

// OrgIDGTE applies the GTE predicate on the "org_id" field.
func OrgIDGTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldOrgID, v))
}

// OrgIDLT applies the LT predicate on the "org_id" field.
func OrgIDLT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldOrgID, v))
}

// OrgIDLTE applies the LTE predicate on the "org_id" field.
func OrgIDLTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldOrgID, v))
}

// OrgIDContains applies the Contains predicate on the "org_id" field.
func OrgIDContains(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContains(FieldOrgID, v))
}

// OrgIDHasPrefix applies the HasPrefix predicate on the "org_id" field.
func OrgIDHasPrefix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasPrefix(FieldOrgID, v))
}

// OrgIDHasSuffix applies the HasSuffix predicate on the "org_id" field.
func OrgIDHasSuffix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasSuffix(FieldOrgID, v))
}

// OrgIDIsNil applies the IsNil predicate on the "org_id" field.
func OrgIDIsNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIsNull(FieldOrgID))
}

// OrgIDNotNil applies the NotNil predicate on the "org_id" field.
func OrgIDNotNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotNull(FieldOrgID))
}

// OrgIDEqualFold applies the EqualFold predicate on the "org_id" field.
func OrgIDEqualFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEqualFold(FieldOrgID, v))
}

// OrgIDContainsFold applies the ContainsFold predicate on the "org_id" field.
func OrgIDContainsFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContainsFold(FieldOrgID, v))
}

// PublishedTimesEQ applies the EQ predicate on the "published_times" field.
func PublishedTimesEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldPublishedTimes, v))
}

// PublishedTimesNEQ applies the NEQ predicate on the "published_times" field.
func PublishedTimesNEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldPublishedTimes, v))
}

// PublishedTimesIn applies the In predicate on the "published_times" field.
func PublishedTimesIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldPublishedTimes, vs...))
}

// PublishedTimesNotIn applies the NotIn predicate on the "published_times" field.
func PublishedTimesNotIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldPublishedTimes, vs...))
}

// PublishedTimesGT applies the GT predicate on the "published_times" field.
func PublishedTimesGT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldPublishedTimes, v))
}

// PublishedTimesGTE applies the GTE predicate on the "published_times" field.
func PublishedTimesGTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldPublishedTimes, v))
}

// PublishedTimesLT applies the LT predicate on the "published_times" field.
func PublishedTimesLT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldPublishedTimes, v))
}

// PublishedTimesLTE applies the LTE predicate on the "published_times" field.
func PublishedTimesLTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldPublishedTimes, v))
}

// PublishedTimesContains applies the Contains predicate on the "published_times" field.
func PublishedTimesContains(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContains(FieldPublishedTimes, v))
}

// PublishedTimesHasPrefix applies the HasPrefix predicate on the "published_times" field.
func PublishedTimesHasPrefix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasPrefix(FieldPublishedTimes, v))
}

// PublishedTimesHasSuffix applies the HasSuffix predicate on the "published_times" field.
func PublishedTimesHasSuffix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasSuffix(FieldPublishedTimes, v))
}

// PublishedTimesIsNil applies the IsNil predicate on the "published_times" field.
func PublishedTimesIsNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIsNull(FieldPublishedTimes))
}

// PublishedTimesNotNil applies the NotNil predicate on the "published_times" field.
func PublishedTimesNotNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotNull(FieldPublishedTimes))
}

// PublishedTimesEqualFold applies the EqualFold predicate on the "published_times" field.
func PublishedTimesEqualFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEqualFold(FieldPublishedTimes, v))
}

// PublishedTimesContainsFold applies the ContainsFold predicate on the "published_times" field.
func PublishedTimesContainsFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContainsFold(FieldPublishedTimes, v))
}

// PrintTimesEQ applies the EQ predicate on the "print_times" field.
func PrintTimesEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldPrintTimes, v))
}

// PrintTimesNEQ applies the NEQ predicate on the "print_times" field.
func PrintTimesNEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldPrintTimes, v))
}

// PrintTimesIn applies the In predicate on the "print_times" field.
func PrintTimesIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldPrintTimes, vs...))
}

// PrintTimesNotIn applies the NotIn predicate on the "print_times" field.
func PrintTimesNotIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldPrintTimes, vs...))
}

// PrintTimesGT applies the GT predicate on the "print_times" field.
func PrintTimesGT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldPrintTimes, v))
}

// PrintTimesGTE applies the GTE predicate on the "print_times" field.
func PrintTimesGTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldPrintTimes, v))
}

// PrintTimesLT applies the LT predicate on the "print_times" field.
func PrintTimesLT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldPrintTimes, v))
}

// PrintTimesLTE applies the LTE predicate on the "print_times" field.
func PrintTimesLTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldPrintTimes, v))
}

// PrintTimesContains applies the Contains predicate on the "print_times" field.
func PrintTimesContains(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContains(FieldPrintTimes, v))
}

// PrintTimesHasPrefix applies the HasPrefix predicate on the "print_times" field.
func PrintTimesHasPrefix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasPrefix(FieldPrintTimes, v))
}

// PrintTimesHasSuffix applies the HasSuffix predicate on the "print_times" field.
func PrintTimesHasSuffix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasSuffix(FieldPrintTimes, v))
}

// PrintTimesIsNil applies the IsNil predicate on the "print_times" field.
func PrintTimesIsNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIsNull(FieldPrintTimes))
}

// PrintTimesNotNil applies the NotNil predicate on the "print_times" field.
func PrintTimesNotNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotNull(FieldPrintTimes))
}

// PrintTimesEqualFold applies the EqualFold predicate on the "print_times" field.
func PrintTimesEqualFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEqualFold(FieldPrintTimes, v))
}

// PrintTimesContainsFold applies the ContainsFold predicate on the "print_times" field.
func PrintTimesContainsFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContainsFold(FieldPrintTimes, v))
}

// PriceEQ applies the EQ predicate on the "price" field.
func PriceEQ(v float64) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldPrice, v))
}

// PriceNEQ applies the NEQ predicate on the "price" field.
func PriceNEQ(v float64) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldPrice, v))
}

// PriceIn applies the In predicate on the "price" field.
func PriceIn(vs ...float64) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldPrice, vs...))
}

// PriceNotIn applies the NotIn predicate on the "price" field.
func PriceNotIn(vs ...float64) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldPrice, vs...))
}

// PriceGT applies the GT predicate on the "price" field.
func PriceGT(v float64) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldPrice, v))
}

// PriceGTE applies the GTE predicate on the "price" field.
func PriceGTE(v float64) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldPrice, v))
}

// PriceLT applies the LT predicate on the "price" field.
func PriceLT(v float64) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldPrice, v))
}

// PriceLTE applies the LTE predicate on the "price" field.
func PriceLTE(v float64) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldPrice, v))
}

// PriceIsNil applies the IsNil predicate on the "price" field.
func PriceIsNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIsNull(FieldPrice))
}

// PriceNotNil applies the NotNil predicate on the "price" field.
func PriceNotNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotNull(FieldPrice))
}

// IntroductionEQ applies the EQ predicate on the "introduction" field.
func IntroductionEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldIntroduction, v))
}

// IntroductionNEQ applies the NEQ predicate on the "introduction" field.
func IntroductionNEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldIntroduction, v))
}

// IntroductionIn applies the In predicate on the "introduction" field.
func IntroductionIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldIntroduction, vs...))
}

// IntroductionNotIn applies the NotIn predicate on the "introduction" field.
func IntroductionNotIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldIntroduction, vs...))
}

// IntroductionGT applies the GT predicate on the "introduction" field.
func IntroductionGT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldIntroduction, v))
}

// IntroductionGTE applies the GTE predicate on the "introduction" field.
func IntroductionGTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldIntroduction, v))
}

// IntroductionLT applies the LT predicate on the "introduction" field.
func IntroductionLT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldIntroduction, v))
}

// IntroductionLTE applies the LTE predicate on the "introduction" field.
func IntroductionLTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldIntroduction, v))
}

// IntroductionContains applies the Contains predicate on the "introduction" field.
func IntroductionContains(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContains(FieldIntroduction, v))
}

// IntroductionHasPrefix applies the HasPrefix predicate on the "introduction" field.
func IntroductionHasPrefix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasPrefix(FieldIntroduction, v))
}

// IntroductionHasSuffix applies the HasSuffix predicate on the "introduction" field.
func IntroductionHasSuffix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasSuffix(FieldIntroduction, v))
}

// IntroductionIsNil applies the IsNil predicate on the "introduction" field.
func IntroductionIsNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIsNull(FieldIntroduction))
}

// IntroductionNotNil applies the NotNil predicate on the "introduction" field.
func IntroductionNotNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotNull(FieldIntroduction))
}

// IntroductionEqualFold applies the EqualFold predicate on the "introduction" field.
func IntroductionEqualFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEqualFold(FieldIntroduction, v))
}

// IntroductionContainsFold applies the ContainsFold predicate on the "introduction" field.
func IntroductionContainsFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContainsFold(FieldIntroduction, v))
}

// WordCountEQ applies the EQ predicate on the "word_count" field.
func WordCountEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldWordCount, v))
}

// WordCountNEQ applies the NEQ predicate on the "word_count" field.
func WordCountNEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldWordCount, v))
}

// WordCountIn applies the In predicate on the "word_count" field.
func WordCountIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldWordCount, vs...))
}

// WordCountNotIn applies the NotIn predicate on the "word_count" field.
func WordCountNotIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldWordCount, vs...))
}

// WordCountGT applies the GT predicate on the "word_count" field.
func WordCountGT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldWordCount, v))
}

// WordCountGTE applies the GTE predicate on the "word_count" field.
func WordCountGTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldWordCount, v))
}

// WordCountLT applies the LT predicate on the "word_count" field.
func WordCountLT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldWordCount, v))
}

// WordCountLTE applies the LTE predicate on the "word_count" field.
func WordCountLTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldWordCount, v))
}

// WordCountContains applies the Contains predicate on the "word_count" field.
func WordCountContains(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContains(FieldWordCount, v))
}

// WordCountHasPrefix applies the HasPrefix predicate on the "word_count" field.
func WordCountHasPrefix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasPrefix(FieldWordCount, v))
}

// WordCountHasSuffix applies the HasSuffix predicate on the "word_count" field.
func WordCountHasSuffix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasSuffix(FieldWordCount, v))
}

// WordCountIsNil applies the IsNil predicate on the "word_count" field.
func WordCountIsNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIsNull(FieldWordCount))
}

// WordCountNotNil applies the NotNil predicate on the "word_count" field.
func WordCountNotNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotNull(FieldWordCount))
}

// WordCountEqualFold applies the EqualFold predicate on the "word_count" field.
func WordCountEqualFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEqualFold(FieldWordCount, v))
}

// WordCountContainsFold applies the ContainsFold predicate on the "word_count" field.
func WordCountContainsFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContainsFold(FieldWordCount, v))
}

// IsbnEQ applies the EQ predicate on the "isbn" field.
func IsbnEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldIsbn, v))
}

// IsbnNEQ applies the NEQ predicate on the "isbn" field.
func IsbnNEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldIsbn, v))
}

// IsbnIn applies the In predicate on the "isbn" field.
func IsbnIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldIsbn, vs...))
}

// IsbnNotIn applies the NotIn predicate on the "isbn" field.
func IsbnNotIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldIsbn, vs...))
}

// IsbnGT applies the GT predicate on the "isbn" field.
func IsbnGT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldIsbn, v))
}

// IsbnGTE applies the GTE predicate on the "isbn" field.
func IsbnGTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldIsbn, v))
}

// IsbnLT applies the LT predicate on the "isbn" field.
func IsbnLT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldIsbn, v))
}

// IsbnLTE applies the LTE predicate on the "isbn" field.
func IsbnLTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldIsbn, v))
}

// IsbnContains applies the Contains predicate on the "isbn" field.
func IsbnContains(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContains(FieldIsbn, v))
}

// IsbnHasPrefix applies the HasPrefix predicate on the "isbn" field.
func IsbnHasPrefix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasPrefix(FieldIsbn, v))
}

// IsbnHasSuffix applies the HasSuffix predicate on the "isbn" field.
func IsbnHasSuffix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasSuffix(FieldIsbn, v))
}

// IsbnIsNil applies the IsNil predicate on the "isbn" field.
func IsbnIsNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIsNull(FieldIsbn))
}

// IsbnNotNil applies the NotNil predicate on the "isbn" field.
func IsbnNotNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotNull(FieldIsbn))
}

// IsbnEqualFold applies the EqualFold predicate on the "isbn" field.
func IsbnEqualFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEqualFold(FieldIsbn, v))
}

// IsbnContainsFold applies the ContainsFold predicate on the "isbn" field.
func IsbnContainsFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContainsFold(FieldIsbn, v))
}

// StorageByEQ applies the EQ predicate on the "storage_by" field.
func StorageByEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldStorageBy, v))
}

// StorageByNEQ applies the NEQ predicate on the "storage_by" field.
func StorageByNEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldStorageBy, v))
}

// StorageByIn applies the In predicate on the "storage_by" field.
func StorageByIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldStorageBy, vs...))
}

// StorageByNotIn applies the NotIn predicate on the "storage_by" field.
func StorageByNotIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldStorageBy, vs...))
}

// StorageByGT applies the GT predicate on the "storage_by" field.
func StorageByGT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldStorageBy, v))
}

// StorageByGTE applies the GTE predicate on the "storage_by" field.
func StorageByGTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldStorageBy, v))
}

// StorageByLT applies the LT predicate on the "storage_by" field.
func StorageByLT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldStorageBy, v))
}

// StorageByLTE applies the LTE predicate on the "storage_by" field.
func StorageByLTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldStorageBy, v))
}

// StorageByContains applies the Contains predicate on the "storage_by" field.
func StorageByContains(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContains(FieldStorageBy, v))
}

// StorageByHasPrefix applies the HasPrefix predicate on the "storage_by" field.
func StorageByHasPrefix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasPrefix(FieldStorageBy, v))
}

// StorageByHasSuffix applies the HasSuffix predicate on the "storage_by" field.
func StorageByHasSuffix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasSuffix(FieldStorageBy, v))
}

// StorageByIsNil applies the IsNil predicate on the "storage_by" field.
func StorageByIsNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIsNull(FieldStorageBy))
}

// StorageByNotNil applies the NotNil predicate on the "storage_by" field.
func StorageByNotNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotNull(FieldStorageBy))
}

// StorageByEqualFold applies the EqualFold predicate on the "storage_by" field.
func StorageByEqualFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEqualFold(FieldStorageBy, v))
}

// StorageByContainsFold applies the ContainsFold predicate on the "storage_by" field.
func StorageByContainsFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContainsFold(FieldStorageBy, v))
}

// StorageAtEQ applies the EQ predicate on the "storage_at" field.
func StorageAtEQ(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldStorageAt, v))
}

// StorageAtNEQ applies the NEQ predicate on the "storage_at" field.
func StorageAtNEQ(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldStorageAt, v))
}

// StorageAtIn applies the In predicate on the "storage_at" field.
func StorageAtIn(vs ...time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldStorageAt, vs...))
}

// StorageAtNotIn applies the NotIn predicate on the "storage_at" field.
func StorageAtNotIn(vs ...time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldStorageAt, vs...))
}

// StorageAtGT applies the GT predicate on the "storage_at" field.
func StorageAtGT(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldStorageAt, v))
}

// StorageAtGTE applies the GTE predicate on the "storage_at" field.
func StorageAtGTE(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldStorageAt, v))
}

// StorageAtLT applies the LT predicate on the "storage_at" field.
func StorageAtLT(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldStorageAt, v))
}

// StorageAtLTE applies the LTE predicate on the "storage_at" field.
func StorageAtLTE(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldStorageAt, v))
}

// StorageAtIsNil applies the IsNil predicate on the "storage_at" field.
func StorageAtIsNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIsNull(FieldStorageAt))
}

// StorageAtNotNil applies the NotNil predicate on the "storage_at" field.
func StorageAtNotNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotNull(FieldStorageAt))
}

// ModifiedByEQ applies the EQ predicate on the "modified_by" field.
func ModifiedByEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldModifiedBy, v))
}

// ModifiedByNEQ applies the NEQ predicate on the "modified_by" field.
func ModifiedByNEQ(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldModifiedBy, v))
}

// ModifiedByIn applies the In predicate on the "modified_by" field.
func ModifiedByIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldModifiedBy, vs...))
}

// ModifiedByNotIn applies the NotIn predicate on the "modified_by" field.
func ModifiedByNotIn(vs ...string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldModifiedBy, vs...))
}

// ModifiedByGT applies the GT predicate on the "modified_by" field.
func ModifiedByGT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldModifiedBy, v))
}

// ModifiedByGTE applies the GTE predicate on the "modified_by" field.
func ModifiedByGTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldModifiedBy, v))
}

// ModifiedByLT applies the LT predicate on the "modified_by" field.
func ModifiedByLT(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldModifiedBy, v))
}

// ModifiedByLTE applies the LTE predicate on the "modified_by" field.
func ModifiedByLTE(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldModifiedBy, v))
}

// ModifiedByContains applies the Contains predicate on the "modified_by" field.
func ModifiedByContains(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContains(FieldModifiedBy, v))
}

// ModifiedByHasPrefix applies the HasPrefix predicate on the "modified_by" field.
func ModifiedByHasPrefix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasPrefix(FieldModifiedBy, v))
}

// ModifiedByHasSuffix applies the HasSuffix predicate on the "modified_by" field.
func ModifiedByHasSuffix(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldHasSuffix(FieldModifiedBy, v))
}

// ModifiedByIsNil applies the IsNil predicate on the "modified_by" field.
func ModifiedByIsNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIsNull(FieldModifiedBy))
}

// ModifiedByNotNil applies the NotNil predicate on the "modified_by" field.
func ModifiedByNotNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotNull(FieldModifiedBy))
}

// ModifiedByEqualFold applies the EqualFold predicate on the "modified_by" field.
func ModifiedByEqualFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEqualFold(FieldModifiedBy, v))
}

// ModifiedByContainsFold applies the ContainsFold predicate on the "modified_by" field.
func ModifiedByContainsFold(v string) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldContainsFold(FieldModifiedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotNull(FieldCreatedAt))
}

// ModifiedAtEQ applies the EQ predicate on the "modified_at" field.
func ModifiedAtEQ(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldEQ(FieldModifiedAt, v))
}

// ModifiedAtNEQ applies the NEQ predicate on the "modified_at" field.
func ModifiedAtNEQ(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNEQ(FieldModifiedAt, v))
}

// ModifiedAtIn applies the In predicate on the "modified_at" field.
func ModifiedAtIn(vs ...time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIn(FieldModifiedAt, vs...))
}

// ModifiedAtNotIn applies the NotIn predicate on the "modified_at" field.
func ModifiedAtNotIn(vs ...time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotIn(FieldModifiedAt, vs...))
}

// ModifiedAtGT applies the GT predicate on the "modified_at" field.
func ModifiedAtGT(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGT(FieldModifiedAt, v))
}

// ModifiedAtGTE applies the GTE predicate on the "modified_at" field.
func ModifiedAtGTE(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldGTE(FieldModifiedAt, v))
}

// ModifiedAtLT applies the LT predicate on the "modified_at" field.
func ModifiedAtLT(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLT(FieldModifiedAt, v))
}

// ModifiedAtLTE applies the LTE predicate on the "modified_at" field.
func ModifiedAtLTE(v time.Time) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldLTE(FieldModifiedAt, v))
}

// ModifiedAtIsNil applies the IsNil predicate on the "modified_at" field.
func ModifiedAtIsNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldIsNull(FieldModifiedAt))
}

// ModifiedAtNotNil applies the NotNil predicate on the "modified_at" field.
func ModifiedAtNotNil() predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.FieldNotNull(FieldModifiedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PublicationInfo) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PublicationInfo) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PublicationInfo) predicate.PublicationInfo {
	return predicate.PublicationInfo(sql.NotPredicates(p))
}
