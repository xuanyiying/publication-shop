// Code generated by ent, DO NOT EDIT.

package publicationorg

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/publication-shop/app/catalog/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldLTE(FieldID, id))
}

// OrgCode applies equality check predicate on the "org_code" field. It's identical to OrgCodeEQ.
func OrgCode(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEQ(FieldOrgCode, v))
}

// OrgName applies equality check predicate on the "org_name" field. It's identical to OrgNameEQ.
func OrgName(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEQ(FieldOrgName, v))
}

// OrgAddress applies equality check predicate on the "org_address" field. It's identical to OrgAddressEQ.
func OrgAddress(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEQ(FieldOrgAddress, v))
}

// ModifiedAt applies equality check predicate on the "modified_at" field. It's identical to ModifiedAtEQ.
func ModifiedAt(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEQ(FieldModifiedAt, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEQ(FieldCreatedAt, v))
}

// OrgCodeEQ applies the EQ predicate on the "org_code" field.
func OrgCodeEQ(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEQ(FieldOrgCode, v))
}

// OrgCodeNEQ applies the NEQ predicate on the "org_code" field.
func OrgCodeNEQ(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNEQ(FieldOrgCode, v))
}

// OrgCodeIn applies the In predicate on the "org_code" field.
func OrgCodeIn(vs ...string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldIn(FieldOrgCode, vs...))
}

// OrgCodeNotIn applies the NotIn predicate on the "org_code" field.
func OrgCodeNotIn(vs ...string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNotIn(FieldOrgCode, vs...))
}

// OrgCodeGT applies the GT predicate on the "org_code" field.
func OrgCodeGT(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldGT(FieldOrgCode, v))
}

// OrgCodeGTE applies the GTE predicate on the "org_code" field.
func OrgCodeGTE(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldGTE(FieldOrgCode, v))
}

// OrgCodeLT applies the LT predicate on the "org_code" field.
func OrgCodeLT(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldLT(FieldOrgCode, v))
}

// OrgCodeLTE applies the LTE predicate on the "org_code" field.
func OrgCodeLTE(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldLTE(FieldOrgCode, v))
}

// OrgCodeContains applies the Contains predicate on the "org_code" field.
func OrgCodeContains(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldContains(FieldOrgCode, v))
}

// OrgCodeHasPrefix applies the HasPrefix predicate on the "org_code" field.
func OrgCodeHasPrefix(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldHasPrefix(FieldOrgCode, v))
}

// OrgCodeHasSuffix applies the HasSuffix predicate on the "org_code" field.
func OrgCodeHasSuffix(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldHasSuffix(FieldOrgCode, v))
}

// OrgCodeEqualFold applies the EqualFold predicate on the "org_code" field.
func OrgCodeEqualFold(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEqualFold(FieldOrgCode, v))
}

// OrgCodeContainsFold applies the ContainsFold predicate on the "org_code" field.
func OrgCodeContainsFold(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldContainsFold(FieldOrgCode, v))
}

// OrgNameEQ applies the EQ predicate on the "org_name" field.
func OrgNameEQ(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEQ(FieldOrgName, v))
}

// OrgNameNEQ applies the NEQ predicate on the "org_name" field.
func OrgNameNEQ(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNEQ(FieldOrgName, v))
}

// OrgNameIn applies the In predicate on the "org_name" field.
func OrgNameIn(vs ...string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldIn(FieldOrgName, vs...))
}

// OrgNameNotIn applies the NotIn predicate on the "org_name" field.
func OrgNameNotIn(vs ...string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNotIn(FieldOrgName, vs...))
}

// OrgNameGT applies the GT predicate on the "org_name" field.
func OrgNameGT(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldGT(FieldOrgName, v))
}

// OrgNameGTE applies the GTE predicate on the "org_name" field.
func OrgNameGTE(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldGTE(FieldOrgName, v))
}

// OrgNameLT applies the LT predicate on the "org_name" field.
func OrgNameLT(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldLT(FieldOrgName, v))
}

// OrgNameLTE applies the LTE predicate on the "org_name" field.
func OrgNameLTE(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldLTE(FieldOrgName, v))
}

// OrgNameContains applies the Contains predicate on the "org_name" field.
func OrgNameContains(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldContains(FieldOrgName, v))
}

// OrgNameHasPrefix applies the HasPrefix predicate on the "org_name" field.
func OrgNameHasPrefix(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldHasPrefix(FieldOrgName, v))
}

// OrgNameHasSuffix applies the HasSuffix predicate on the "org_name" field.
func OrgNameHasSuffix(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldHasSuffix(FieldOrgName, v))
}

// OrgNameIsNil applies the IsNil predicate on the "org_name" field.
func OrgNameIsNil() predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldIsNull(FieldOrgName))
}

// OrgNameNotNil applies the NotNil predicate on the "org_name" field.
func OrgNameNotNil() predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNotNull(FieldOrgName))
}

// OrgNameEqualFold applies the EqualFold predicate on the "org_name" field.
func OrgNameEqualFold(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEqualFold(FieldOrgName, v))
}

// OrgNameContainsFold applies the ContainsFold predicate on the "org_name" field.
func OrgNameContainsFold(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldContainsFold(FieldOrgName, v))
}

// OrgAddressEQ applies the EQ predicate on the "org_address" field.
func OrgAddressEQ(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEQ(FieldOrgAddress, v))
}

// OrgAddressNEQ applies the NEQ predicate on the "org_address" field.
func OrgAddressNEQ(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNEQ(FieldOrgAddress, v))
}

// OrgAddressIn applies the In predicate on the "org_address" field.
func OrgAddressIn(vs ...string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldIn(FieldOrgAddress, vs...))
}

// OrgAddressNotIn applies the NotIn predicate on the "org_address" field.
func OrgAddressNotIn(vs ...string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNotIn(FieldOrgAddress, vs...))
}

// OrgAddressGT applies the GT predicate on the "org_address" field.
func OrgAddressGT(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldGT(FieldOrgAddress, v))
}

// OrgAddressGTE applies the GTE predicate on the "org_address" field.
func OrgAddressGTE(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldGTE(FieldOrgAddress, v))
}

// OrgAddressLT applies the LT predicate on the "org_address" field.
func OrgAddressLT(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldLT(FieldOrgAddress, v))
}

// OrgAddressLTE applies the LTE predicate on the "org_address" field.
func OrgAddressLTE(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldLTE(FieldOrgAddress, v))
}

// OrgAddressContains applies the Contains predicate on the "org_address" field.
func OrgAddressContains(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldContains(FieldOrgAddress, v))
}

// OrgAddressHasPrefix applies the HasPrefix predicate on the "org_address" field.
func OrgAddressHasPrefix(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldHasPrefix(FieldOrgAddress, v))
}

// OrgAddressHasSuffix applies the HasSuffix predicate on the "org_address" field.
func OrgAddressHasSuffix(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldHasSuffix(FieldOrgAddress, v))
}

// OrgAddressIsNil applies the IsNil predicate on the "org_address" field.
func OrgAddressIsNil() predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldIsNull(FieldOrgAddress))
}

// OrgAddressNotNil applies the NotNil predicate on the "org_address" field.
func OrgAddressNotNil() predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNotNull(FieldOrgAddress))
}

// OrgAddressEqualFold applies the EqualFold predicate on the "org_address" field.
func OrgAddressEqualFold(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEqualFold(FieldOrgAddress, v))
}

// OrgAddressContainsFold applies the ContainsFold predicate on the "org_address" field.
func OrgAddressContainsFold(v string) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldContainsFold(FieldOrgAddress, v))
}

// ModifiedAtEQ applies the EQ predicate on the "modified_at" field.
func ModifiedAtEQ(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEQ(FieldModifiedAt, v))
}

// ModifiedAtNEQ applies the NEQ predicate on the "modified_at" field.
func ModifiedAtNEQ(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNEQ(FieldModifiedAt, v))
}

// ModifiedAtIn applies the In predicate on the "modified_at" field.
func ModifiedAtIn(vs ...time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldIn(FieldModifiedAt, vs...))
}

// ModifiedAtNotIn applies the NotIn predicate on the "modified_at" field.
func ModifiedAtNotIn(vs ...time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNotIn(FieldModifiedAt, vs...))
}

// ModifiedAtGT applies the GT predicate on the "modified_at" field.
func ModifiedAtGT(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldGT(FieldModifiedAt, v))
}

// ModifiedAtGTE applies the GTE predicate on the "modified_at" field.
func ModifiedAtGTE(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldGTE(FieldModifiedAt, v))
}

// ModifiedAtLT applies the LT predicate on the "modified_at" field.
func ModifiedAtLT(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldLT(FieldModifiedAt, v))
}

// ModifiedAtLTE applies the LTE predicate on the "modified_at" field.
func ModifiedAtLTE(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldLTE(FieldModifiedAt, v))
}

// ModifiedAtIsNil applies the IsNil predicate on the "modified_at" field.
func ModifiedAtIsNil() predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldIsNull(FieldModifiedAt))
}

// ModifiedAtNotNil applies the NotNil predicate on the "modified_at" field.
func ModifiedAtNotNil() predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNotNull(FieldModifiedAt))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.FieldNotNull(FieldCreatedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PublicationOrg) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PublicationOrg) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PublicationOrg) predicate.PublicationOrg {
	return predicate.PublicationOrg(sql.NotPredicates(p))
}
