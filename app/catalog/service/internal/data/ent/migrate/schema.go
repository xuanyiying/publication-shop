// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CatalogColumns holds the columns for the "catalog" table.
	CatalogColumns = []*schema.Column{
		{Name: "catalog_id", Type: field.TypeInt, Increment: true},
		{Name: "catalog_code", Type: field.TypeString},
		{Name: "catalog_name", Type: field.TypeString, Nullable: true},
		{Name: "parent_catalog_id", Type: field.TypeString},
	}
	// CatalogTable holds the schema information for the "catalog" table.
	CatalogTable = &schema.Table{
		Name:       "catalog",
		Columns:    CatalogColumns,
		PrimaryKey: []*schema.Column{CatalogColumns[0]},
	}
	// ClassicColumns holds the columns for the "classic" table.
	ClassicColumns = []*schema.Column{
		{Name: "classic_id", Type: field.TypeInt, Increment: true},
		{Name: "classic_name", Type: field.TypeString, Nullable: true},
	}
	// ClassicTable holds the schema information for the "classic" table.
	ClassicTable = &schema.Table{
		Name:       "classic",
		Columns:    ClassicColumns,
		PrimaryKey: []*schema.Column{ClassicColumns[0]},
	}
	// LanguageColumns holds the columns for the "language" table.
	LanguageColumns = []*schema.Column{
		{Name: "language_id", Type: field.TypeInt, Increment: true},
		{Name: "language_name", Type: field.TypeString, Nullable: true},
		{Name: "language_code", Type: field.TypeString, Nullable: true},
	}
	// LanguageTable holds the schema information for the "language" table.
	LanguageTable = &schema.Table{
		Name:       "language",
		Columns:    LanguageColumns,
		PrimaryKey: []*schema.Column{LanguageColumns[0]},
	}
	// PublicationAuthorColumns holds the columns for the "publication_author" table.
	PublicationAuthorColumns = []*schema.Column{
		{Name: "author_id", Type: field.TypeInt, Increment: true},
		{Name: "isbn", Type: field.TypeString},
		{Name: "publication_id", Type: field.TypeInt, Nullable: true},
		{Name: "author", Type: field.TypeString, Nullable: true},
		{Name: "author_about", Type: field.TypeString, Nullable: true},
	}
	// PublicationAuthorTable holds the schema information for the "publication_author" table.
	PublicationAuthorTable = &schema.Table{
		Name:       "publication_author",
		Columns:    PublicationAuthorColumns,
		PrimaryKey: []*schema.Column{PublicationAuthorColumns[0]},
	}
	// PublicationDetailColumns holds the columns for the "publication_detail" table.
	PublicationDetailColumns = []*schema.Column{
		{Name: "detail_id", Type: field.TypeInt, Increment: true},
		{Name: "isbn", Type: field.TypeString},
		{Name: "detail_html", Type: field.TypeString, Nullable: true},
		{Name: "detail_img", Type: field.TypeString, Nullable: true},
		{Name: "publication_id", Type: field.TypeInt, Nullable: true},
	}
	// PublicationDetailTable holds the schema information for the "publication_detail" table.
	PublicationDetailTable = &schema.Table{
		Name:       "publication_detail",
		Columns:    PublicationDetailColumns,
		PrimaryKey: []*schema.Column{PublicationDetailColumns[0]},
	}
	// PublicationInfoColumns holds the columns for the "publication_info" table.
	PublicationInfoColumns = []*schema.Column{
		{Name: "publication_id", Type: field.TypeInt, Increment: true},
		{Name: "publication_name", Type: field.TypeString, Nullable: true},
		{Name: "org_id", Type: field.TypeString, Nullable: true},
		{Name: "published_times", Type: field.TypeString, Nullable: true},
		{Name: "print_times", Type: field.TypeString, Nullable: true},
		{Name: "price", Type: field.TypeFloat64, Nullable: true},
		{Name: "introduction", Type: field.TypeString, Nullable: true},
		{Name: "quantity", Type: field.TypeInt32, Nullable: true},
		{Name: "word_count", Type: field.TypeString, Nullable: true},
		{Name: "isbn", Type: field.TypeString, Nullable: true},
		{Name: "storage_by", Type: field.TypeString, Nullable: true},
		{Name: "storage_at", Type: field.TypeTime, Nullable: true},
		{Name: "modified_by", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "modified_at", Type: field.TypeTime, Nullable: true},
	}
	// PublicationInfoTable holds the schema information for the "publication_info" table.
	PublicationInfoTable = &schema.Table{
		Name:       "publication_info",
		Columns:    PublicationInfoColumns,
		PrimaryKey: []*schema.Column{PublicationInfoColumns[0]},
	}
	// PublicationOrgColumns holds the columns for the "publication_org" table.
	PublicationOrgColumns = []*schema.Column{
		{Name: "org_id", Type: field.TypeInt, Increment: true},
		{Name: "org_code", Type: field.TypeString},
		{Name: "org_name", Type: field.TypeString, Nullable: true},
		{Name: "org_address", Type: field.TypeString, Nullable: true},
		{Name: "modified_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
	}
	// PublicationOrgTable holds the schema information for the "publication_org" table.
	PublicationOrgTable = &schema.Table{
		Name:       "publication_org",
		Columns:    PublicationOrgColumns,
		PrimaryKey: []*schema.Column{PublicationOrgColumns[0]},
	}
	// PublicationXCatalogColumns holds the columns for the "publication_x_catalog" table.
	PublicationXCatalogColumns = []*schema.Column{
		{Name: "publication_catalog_id", Type: field.TypeInt, Increment: true},
		{Name: "catalog_id", Type: field.TypeInt},
		{Name: "isbn", Type: field.TypeString},
		{Name: "catalog_name", Type: field.TypeString, Nullable: true},
		{Name: "publication_id", Type: field.TypeInt, Nullable: true},
	}
	// PublicationXCatalogTable holds the schema information for the "publication_x_catalog" table.
	PublicationXCatalogTable = &schema.Table{
		Name:       "publication_x_catalog",
		Columns:    PublicationXCatalogColumns,
		PrimaryKey: []*schema.Column{PublicationXCatalogColumns[0]},
	}
	// PublicationXClassicColumns holds the columns for the "publication_x_classic" table.
	PublicationXClassicColumns = []*schema.Column{
		{Name: "publication_classic_id", Type: field.TypeInt, Increment: true},
		{Name: "classic_id", Type: field.TypeInt},
		{Name: "isbn", Type: field.TypeString},
		{Name: "classic_name", Type: field.TypeString, Nullable: true},
		{Name: "publication_id", Type: field.TypeInt, Nullable: true},
	}
	// PublicationXClassicTable holds the schema information for the "publication_x_classic" table.
	PublicationXClassicTable = &schema.Table{
		Name:       "publication_x_classic",
		Columns:    PublicationXClassicColumns,
		PrimaryKey: []*schema.Column{PublicationXClassicColumns[0]},
	}
	// PublicationXLanguageColumns holds the columns for the "publication_x_language" table.
	PublicationXLanguageColumns = []*schema.Column{
		{Name: "publication_language_id", Type: field.TypeInt, Increment: true},
		{Name: "language_id", Type: field.TypeInt},
		{Name: "isbn", Type: field.TypeString},
		{Name: "language_name", Type: field.TypeString, Nullable: true},
		{Name: "publication_id", Type: field.TypeInt, Nullable: true},
	}
	// PublicationXLanguageTable holds the schema information for the "publication_x_language" table.
	PublicationXLanguageTable = &schema.Table{
		Name:       "publication_x_language",
		Columns:    PublicationXLanguageColumns,
		PrimaryKey: []*schema.Column{PublicationXLanguageColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "age", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CatalogTable,
		ClassicTable,
		LanguageTable,
		PublicationAuthorTable,
		PublicationDetailTable,
		PublicationInfoTable,
		PublicationOrgTable,
		PublicationXCatalogTable,
		PublicationXClassicTable,
		PublicationXLanguageTable,
		UsersTable,
	}
)

func init() {
	CatalogTable.Annotation = &entsql.Annotation{
		Table: "catalog",
	}
	ClassicTable.Annotation = &entsql.Annotation{
		Table: "classic",
	}
	LanguageTable.Annotation = &entsql.Annotation{
		Table: "language",
	}
	PublicationAuthorTable.Annotation = &entsql.Annotation{
		Table: "publication_author",
	}
	PublicationDetailTable.Annotation = &entsql.Annotation{
		Table: "publication_detail",
	}
	PublicationInfoTable.Annotation = &entsql.Annotation{
		Table: "publication_info",
	}
	PublicationOrgTable.Annotation = &entsql.Annotation{
		Table: "publication_org",
	}
	PublicationXCatalogTable.Annotation = &entsql.Annotation{
		Table: "publication_x_catalog",
	}
	PublicationXClassicTable.Annotation = &entsql.Annotation{
		Table: "publication_x_classic",
	}
	PublicationXLanguageTable.Annotation = &entsql.Annotation{
		Table: "publication_x_language",
	}
}
