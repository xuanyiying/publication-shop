syntax = "proto3";

package catalog.service.v1;


option go_package = "api/catalog/service/v1;v1";


service Catalog {
    rpc ListPublication (ListPublicationReq) returns (ListPublicationReply) {
    }

    rpc ListPublicationNextToken (listPublicationNextTokenReq) returns (ListPublicationReplyNextToken) {
    }

    rpc CreatePublication (CreatePublicationReq) returns (CreatePublicationReply) {
    }

    rpc GetPublication (GetPublicationReq) returns (GetPublicationReply) {
    }

    rpc UpdatePublication (UpdatePublicationReq) returns (UpdatePublicationReply) {
    }

    rpc DeletePublication (DeletePublicationReq) returns (DeletePublicationReply) {
    }
}


message ListPublicationReq {
    int64 page_num = 1;
    int64 page_size = 2;
}

message listPublicationNextTokenReq {
    // The maximum number of books to return. The service may return fewer than
  // this value.
  // If unspecified, at most 50 books will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 1;

  // A page token, received from a previous `ListBooks` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListBooks` must match
  // the call that provided the page token.
  string page_token = 2;
}

message ListPublicationReply {
    message Publication {
        message Image {
            string url = 1;
        }
        int64 id = 1;
        string name = 2;
        string description = 3;
        int64 count = 4;
        repeated Image image = 5;
    }
    repeated Publication results = 1;
}

message ListPublicationReplyNextToken {
    message Publication {
        message Image {
            string url = 1;
        }
        int64 id = 1;
        string name = 2;
        string description = 3;
        int64 count = 4;
        repeated Image image = 5;
    }
    repeated Publication results = 1;
    string next_page_token = 2;
}

message CreatePublicationReq {
    message Image {
        string url = 1;
    }
    string name = 1;
    string description = 2;
    int64 count = 3;
    repeated Image image = 4;
}

message CreatePublicationReply {
    message Image {
        string url = 1;
    }
    int64 id = 1;
    string name = 2;
    string description = 3;
    int64 count = 4;
    repeated Image image = 5;
}

message GetPublicationReq {
    int64 id = 1;
}

message GetPublicationReply {
    message Image {
        string url = 1;
    }
    int64 id = 1;
    string name = 2;
    string description = 3;
    int64 count = 4;
    repeated Image image = 5;
}

message UpdatePublicationReq {
    message Image {
        string url = 1;
    }
    int64 id = 1;
    string name = 2;
    string description = 3;
    int64 count = 4;
    repeated Image image = 5;
}

message UpdatePublicationReply {
    message Image {
        string url = 1;
    }
    int64 id = 1;
    string name = 2;
    string description = 3;
    int64 count = 4;
    repeated Image image = 5;
}

message DeletePublicationReq {
    int64 id = 1;
}

message DeletePublicationReply {
}